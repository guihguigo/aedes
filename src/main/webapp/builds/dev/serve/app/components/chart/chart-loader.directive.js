(function() {
  angular.module('aedes').directive('googleChart', function() {
    'ngInject';
    var directive;
    return directive = {
      restrict: "A",
      templateUrl: 'app/components/chart/chart.html',
      link: function($scope, $elem, $attr) {
        var initChart, initLoader;
        initLoader = function() {
          return $scope.loader = true;
        };
        initChart = function() {
          $scope.loader = false;
          return setTimeout(function() {
            var chartType, dt, googleChart, model, options;
            this.$el = $($elem[0]).find('.chart-directive')[0];
            model = $scope.$eval($attr.ngModel);
            if (model) {
              dt = model.data;
              options = model.options;
              chartType = $attr.googleChart;
              googleChart = new google.visualization[chartType](this.$el);
              return googleChart.draw(dt, options);
            }
          }, 100);
        };
        return $scope.$watch('dataModel.activateChart', function(val) {
          if ((val != null) && val) {
            return initChart();
          } else {
            return initLoader();
          }
        });
      }
    };
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY2hhcnQvY2hhcnQtbG9hZGVyLmRpcmVjdGl2ZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBQSxPQUFPLENBQUMsTUFBUixDQUFlLE9BQWYsQ0FDRSxDQUFDLFNBREgsQ0FDYSxhQURiLEVBQzRCLFNBQUE7SUFDeEI7QUFBQSxRQUFBO1dBRUEsU0FBQSxHQUNJO01BQUEsUUFBQSxFQUFXLEdBQVg7TUFDQSxXQUFBLEVBQWEsaUNBRGI7TUFFQSxJQUFBLEVBQU0sU0FBQyxNQUFELEVBQVMsS0FBVCxFQUFnQixLQUFoQjtBQUVKLFlBQUE7UUFBQSxVQUFBLEdBQWEsQ0FBQSxTQUFBLEtBQUE7aUJBQUEsU0FBQTttQkFDWCxNQUFNLENBQUMsTUFBUCxHQUFnQjtVQURMO1FBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQTtRQUliLFNBQUEsR0FBWSxTQUFBO1VBQ1YsTUFBTSxDQUFDLE1BQVAsR0FBZ0I7aUJBRWhCLFVBQUEsQ0FBVyxTQUFBO0FBQ1AsZ0JBQUE7WUFBQSxJQUFDLENBQUEsR0FBRCxHQUFPLENBQUEsQ0FBRSxLQUFNLENBQUEsQ0FBQSxDQUFSLENBQVcsQ0FBQyxJQUFaLENBQWlCLGtCQUFqQixDQUFxQyxDQUFBLENBQUE7WUFJNUMsS0FBQSxHQUFRLE1BQU0sQ0FBQyxLQUFQLENBQWEsS0FBSyxDQUFDLE9BQW5CO1lBTVIsSUFBRyxLQUFIO2NBQ0UsRUFBQSxHQUFLLEtBQUssQ0FBQztjQUNYLE9BQUEsR0FBVSxLQUFLLENBQUM7Y0FDaEIsU0FBQSxHQUFZLEtBQUssQ0FBQztjQUVsQixXQUFBLEdBQWtCLElBQUEsTUFBTSxDQUFDLGFBQWMsQ0FBQSxTQUFBLENBQXJCLENBQWdDLElBQUMsQ0FBQSxHQUFqQztxQkFDbEIsV0FBVyxDQUFDLElBQVosQ0FBaUIsRUFBakIsRUFBb0IsT0FBcEIsRUFORjs7VUFYTyxDQUFYLEVBa0JJLEdBbEJKO1FBSFU7ZUEwQlosTUFBTSxDQUFDLE1BQVAsQ0FBYyx5QkFBZCxFQUF5QyxTQUFDLEdBQUQ7VUFDdkMsSUFBRyxhQUFBLElBQVMsR0FBWjttQkFDSyxTQUFILENBQUEsRUFERjtXQUFBLE1BQUE7bUJBR0ssVUFBSCxDQUFBLEVBSEY7O1FBRHVDLENBQXpDO01BaENJLENBRk47O0VBSm9CLENBRDVCO0FBQUEiLCJmaWxlIjoiY29tcG9uZW50cy9jaGFydC9jaGFydC1sb2FkZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUgJ2FlZGVzJ1xuICAuZGlyZWN0aXZlICdnb29nbGVDaGFydCcsIC0+XG4gICAgJ25nSW5qZWN0J1xuXG4gICAgZGlyZWN0aXZlID1cbiAgICAgICAgcmVzdHJpY3QgOiBcIkFcIixcbiAgICAgICAgdGVtcGxhdGVVcmw6ICdhcHAvY29tcG9uZW50cy9jaGFydC9jaGFydC5odG1sJ1xuICAgICAgICBsaW5rOiAoJHNjb3BlLCAkZWxlbSwgJGF0dHIpIC0+XG5cbiAgICAgICAgICBpbml0TG9hZGVyID0gPT5cbiAgICAgICAgICAgICRzY29wZS5sb2FkZXIgPSB0cnVlXG5cbiAgICAgICAgICAjRnVuY3Rpb24gdG8gcnVuIHdoZW4gdGhlIHRyaWdnZXIgaXMgYWN0aXZhdGVkXG4gICAgICAgICAgaW5pdENoYXJ0ID0gLT5cbiAgICAgICAgICAgICRzY29wZS5sb2FkZXIgPSBmYWxzZVxuXG4gICAgICAgICAgICBzZXRUaW1lb3V0ICgpIC0+XG4gICAgICAgICAgICAgICAgQCRlbCA9ICQoJGVsZW1bMF0pLmZpbmQoJy5jaGFydC1kaXJlY3RpdmUnKVswXVxuXG4gICAgICAgICAgICAgICAgIyBSdW4gJGV2YWwgb24gdGhlICRzY29wZSBtb2RlbCBwYXNzZWRcbiAgICAgICAgICAgICAgICAjIGFzIGFuIEhUTUwgYXR0cmlidXRlXG4gICAgICAgICAgICAgICAgbW9kZWwgPSAkc2NvcGUuJGV2YWwgJGF0dHIubmdNb2RlbFxuXG4gICAgICAgICAgICAgICAgI0lmIHRoZSBtb2RlbCBpcyBkZWZpbmVkIG9uIHRoZSBzY29wZSxcbiAgICAgICAgICAgICAgICAjZ3JhYiB0aGUgZGF0YVRhYmxlIHRoYXQgd2FzIHNldCB1cFxuICAgICAgICAgICAgICAgICNkdXJpbmcgdGhlIEdvb2dsZSBMb2FkZXIgY2FsbGJhY2tcbiAgICAgICAgICAgICAgICAjZnVuY3Rpb24sIGFuZCBkcmF3IHRoZSBjaGFydFxuICAgICAgICAgICAgICAgIGlmIG1vZGVsXG4gICAgICAgICAgICAgICAgICBkdCA9IG1vZGVsLmRhdGFcbiAgICAgICAgICAgICAgICAgIG9wdGlvbnMgPSBtb2RlbC5vcHRpb25zXG4gICAgICAgICAgICAgICAgICBjaGFydFR5cGUgPSAkYXR0ci5nb29nbGVDaGFydFxuXG4gICAgICAgICAgICAgICAgICBnb29nbGVDaGFydCA9IG5ldyBnb29nbGUudmlzdWFsaXphdGlvbltjaGFydFR5cGVdIEAkZWxcbiAgICAgICAgICAgICAgICAgIGdvb2dsZUNoYXJ0LmRyYXcgZHQsb3B0aW9uc1xuICAgICAgICAgICAgICAsIDEwMFxuXG5cbiAgICAgICAgICAjIFdhdGNoIHRoZSBzY29wZSB2YWx1ZSBwbGFjZWQgb24gdGhlIHRyaWdnZXIgYXR0cmlidXRlXG4gICAgICAgICAgIyBpZiBpdCBldmVyIGZsaXBzIHRvIHRydWUsIGFjdGl2YXRlIHRoZSBjaGFydFxuICAgICAgICAgICRzY29wZS4kd2F0Y2ggJ2RhdGFNb2RlbC5hY3RpdmF0ZUNoYXJ0JywgKHZhbCkgLT5cbiAgICAgICAgICAgIGlmIHZhbD8gYW5kIHZhbFxuICAgICAgICAgICAgICBkbyBpbml0Q2hhcnRcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgZG8gaW5pdExvYWRlclxuXG4iXX0=
